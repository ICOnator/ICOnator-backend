server.port=${PORT:8085}

spring.profiles.active=prod
spring.main.banner-mode=off

management.health.rabbit.enabled=false

spring.jpa.hibernate.ddl-auto=${JPA_HIBERNATE_DDL_AUTO}
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=${DATASOURCE_URL}
spring.datasource.username=${DATASOURCE_USERNAME}
spring.datasource.password=${DATASOURCE_PASSWORD}
spring.jpa.generate-ddl=${JPA_GENERATE_DDL_ENABLED}

spring.application.name=iconator-kyc
logging.config=classpath:logback-spring.xml

io.iconator.commons.auth.actuator.user=${ICONATOR_AUTH_ACTUATOR_USER}
io.iconator.commons.auth.actuator.password=${ICONATOR_AUTH_ACTUATOR_PASSWORD}
management.endpoint.health.show-details=when-authorized

logstash.address=${LOGSTASH_ADDRESS}

io.iconator.commons.amqp.url=${AMQP_URL}

io.iconator.services.kyc.idnow.host=${ICONATOR_KYC_HOST}
io.iconator.services.kyc.idnow.companyId=${ICONATOR_KYC_COMPANY_ID}
io.iconator.services.kyc.idnow.apiKey=${ICONATOR_KYC_API_KEY}

io.iconator.services.kyc.client.retry.attempts.max=${KYC_CLIENT_RETRY_ATTEMPTS_MAX}
io.iconator.services.kyc.client.wait-between-attemps.min=${KYC_CLIENT_RETRY_BETWEEN_ATTEMPTS_MIN}
io.iconator.services.kyc.client.wait-between-attemps.max=${KYC_CLIENT_RETRY_BETWEEN_ATTEMPTS_MAX}